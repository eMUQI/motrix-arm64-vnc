name: Build and Push ARM64 Docker Image

on:
  push:
    paths:
    - 'Dockerfile'
  workflow_dispatch:

jobs:
  build-and-push-arm64: 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from Dockerfile
        id: version
        run: |
          VERSION=$(grep -oP 'ARG MOTRIX_VERSION=\K[0-9.]+' ./Dockerfile)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION"

      - name: Set up QEMU for ARM64 build
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64' 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/motrix-arm64-vnc
            ${{ secrets.DOCKERHUB_USERNAME }}/motrix-arm64-vnc
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=latest
            type=ref,event=branch
            type=sha,format=short

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
